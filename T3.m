%%%% 0 - Proposta do T3 - dupla - entrega 04/05 até 24h00.%% %%  a. Para a vogal /a/ determinar a função de laplace%%        --> G(s) = N(s)/D(s). (2.0 pontos)%%  b. Plot sobreposto da vogal com a resposta de Laplace. (2.0 pontos)%%  c. Qual a relação entre Laplace(polos) e Fourier? (1.0 ponto)%%  d. s = sigma + j w --> G(s) --> visualizar o gráfico do ponto de vista de w. %%     Comparando com Fourier qual a conslusão? (1.0 ponto)%%  e. Gerar uma vogal artificial (sintese de voz) de 2 segundos%%        - o mais realista possível (1.0 ponto).%%  f. Um método automátcio para determinar o G(s). (2,0 pontos)%%  g. Um circuito elétrico equivalente a vogal. (1.0 ponto)%% %%  14/05/2021 - versão 1.0 - VCP%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%% Pacotes Revelantes%%pkg load control;pkg load signal;pkg load optim;%%%%% Conclusões sobre o sinal%%%  1. 14 ciclos sobre a vogal.%%  2. Série Temporal dura 0,1 segundos%%  3. cada trecho da vogal dura 0.1/14 = 0.0071429%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% a - Para a vogal /a/ determinar a função de laplace --> %%     G(s) = N(s)/D(s). (2.0 pontos) %% %%   Variáveis:  t          -  tempo de 0 a 100ms%%               Vp         -  série temporal referente a vogal%%               Y0         -  Fourier superior (w > 0) - 0 --> fs/2%%               frequencia -  Frequência - 0 --> fs/2%%               time0      -  variável auxiliar%%%%% carregar os dados para análiseload Voz.mat                        figure(1)plot(t,Vp ,"linewidth",3)xlabel("tempo em segundos")ylabel("amplitude")title("Serie Temporal")grid;set(findall(gcf,'Type','line'),'LineWidth',1);set(gca,'FontSize',14,'LineWidth',1);figure(2)plot(frequencia,Y0,"linewidth", 3)xlabel('Frequencia em Hz');ylabel('ganho em log10');title('Função de Fourier');set(findall(gcf,'Type','line'),'LineWidth',1);set(gca,'FontSize',14,'LineWidth',1);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% a.1 Resposta de um sistema de segunda ordem %% %%  N(s) = a%%  D(s) = s^2 + bs + c%%%% https://octave.sourceforge.io/optim/function/expfit.html## Gvogal#### Transfer function 'Gvogal' from input 'u1' to output ...####             1.308e+04## y1:  ------------------------##      s^2 + 1150 s + 2.137e+07#### Continuous-time model.N  =  13077;D  = [1 1150 2.137e7];Gvogal = tf(N,D);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% b. Plot sobreposto da vogal com a resposta de Laplace. (2.0 pontos) %% GFourier = @(w) 1.308e+04./((j*w).^2 + 1150*(j*w) + 2.137e+07)%%% Comparar o Fourier da serie temporal com o Fourier da funcao de transferenciafigure(3)plot(frequencia,Y0);xlabel('Frequencia em Hz');ylabel('ganho em log10');title('Comparacao entre Fourier e Laplace');hold;plot(frequencia, 20*log10(abs(GFourier(2*pi*frequencia))))grid;set(findall(gcf,'Type','line'),'LineWidth',3);set(gca,'FontSize',14,'LineWidth',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% c. Qual a relação entre Laplace(polos) e Fourier? (1.0 ponto)%%%%    R: *A transformada de Fourier é a transformada de %%      Laplace calculada apenas para os valores imaginários de%%      um determinado parametro "x". Fourier mede apenas o caráter %%      ondulatório de uma função ou sinal,estando limitado a uma %%      dimensão do mapa de Laplace.%%%%      Em Fourier,a analíse não se limita apenas aos pólos,portanto %%      leva-se em conta que os valores de todos os pontos são importantes.%%      De um modo geral,conclui-se que as transformadas de Fourier são %%      utilizadas para converter ou representar uma função que varia %%      no tempo no domínio da frequência.Já a transformada de Laplace é%%      utilizada para converter ou representar uma função que varia %%      no tempo em determinado domínio integral de uma função.%%%%%%%%%% %%%%  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  d. s = sigma + j w --> G(s) --> visualizar o gráfico do ponto de vista de w. %%     Comparando com Fourier qual a conclusão? (1.0 ponto)%%  Ns    = length(frequencia)sigma = linspace(-1000,0,Ns);w     = 2*pi*frequencia;GLaplace = @(s) 1.308e+04./((s).^2 + 1150*(s) + 2.137e+07)for m = 1: Ns  x = sigma(m);  for n = 1: Ns    s = x + j*w(n);    Ganho(m,n) = abs(GLaplace(s));  endfor  endfor    %%% Visualizar o resultado      figure(4)  surf(sigma,frequencia,20*log10(abs(Ganho)))  xlabel('sigma')  ylabel('frequencia')  zlabel('Ganho')  title("Função de Laplace Completa")%%%%%%%%  Ao observarmos o grafico formado pelo surf(sigma,frequencia, ganho),%%  observa-se que a ressonância ocorrerá em um valor específico de Sigma.  %%  Fazendo a análise para w variando com sigma = 0, pode-se observar que%%  estamos calculando a projeção das linhas de curvas em função da frequência.%%  Essa região formada pela ressonância é o mesma curva que foi observado %%  na função de Fourier.%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% e. Gerar uma vogal artificial (sintese de voz) de 2 segundos %%    - o mais realista possível (1.0 ponto).%%figure(5)impulse(Gvogal)set(findall(gcf,'Type','line'),'LineWidth',3);set(gca,'FontSize',14,'LineWidth',2);figure(6)[Y, T, X] = impulse (Gvogal, 0.01);Vogal     = [Y' Y'];Vogal     = [Vogal Vogal Vogal Vogal Vogal];plot(Vogal);xlabel('Tempo em Segundos')ylabel('Amplitude')title('Comparação Vogal analisada e sintetizada')grid;hold;plot(Vp);set(findall(gcf,'Type','line'),'LineWidth',1);set(gca,'FontSize',14,'LineWidth',1);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  f. Um método automático para determinar o G(s). (2,0 pontos)%% [pks, loc, extra] = findpeaks (Vp, 'DoubleSided', 'MinPeakDistance', 0.001);%% Realiza a filtragem de apenas os picos positivospks_pos = pks(pks>0);%% Realiza a filtragem dos indices dos picos positivosloc_pos = loc(pks>0);%%Grafico dos picos no sinal de vozfigure(7)plot(t, Vp, t(loc_pos), Vp(loc_pos), 'or')xlabel('Tempo em segundos')ylabel('Amplitude')title('Picos da serie temporal')grid;set(findall(gcf,'Type','line'),'LineWidth',1);set(gca,'FontSize',14,'LineWidth',1);%% Para determinar o G(s) de forma automaticatic();function [b2 c2 erro2] = erro_min(b, c, Vp)%% Valores escolhidoserro2  = 9999999;N= 1;% Intervalo escolhido para analisetrecho = Vp(165:209);   %% for que percorre b,c sendo o denominador Dfor i = 1: length(b)                for j = 1: length(c)                D = [1 b(i) c(j)];%% Estimativa da função de transferencia    Gs = tf(N, D);               [serie, tempo, X] = impulse(Gs);    %% Formula que calcula o erro    erro = sum(power(trecho - serie(1:45), 2)); %% Condicional que compara os erros     if erro < erro2                  erro2 = erro;      b2 = b(i);      c2 = c(j);    endif          endfor endfor %% Print do tempo com menor erro possivelendfunctionelapsed_time = toc ()%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% g - Um circuito elétrico equivalente a vogal. (1.0 ponto) %% %%  VG -->  R -->  L -->  VG - série%%%%  VG // R // C - paralelo%%%%  Comparar os valores de um Circuito RLC com os valores da%%  da Série Temporal:%%%%           1                       y(s)  <- Saida%%  --------------------      =     -------%%   LC.s^2 + RC.s + 1               x(s)  <- Entrada%%%%%%           1                              1.308e+04%%  --------------------      =     --------------------------%%   LC.s^2 + RC.s + 1               s^2 + 1150 s + 2.137e+07%%%%            1                               1.308e+04%%  --------------------   =  --------------------------------------------------%%  LC.s^2 + RC.s + 1           2.137e+07(s^2/2.137e+07 + 1150.s/2.137e+07 + 1)%%                               %%  %%             1%%  LC =  ------------ = 0.468e-07%%         2.137e+07 %%  %%           1150.s         %%  RC =  -------------- = 538,137e-07%%          2.137e+07%%%%%%  Com essa relação matemática, pode-se observar que com esse mapeamento%%  é possível transformar uma série temporal em um circuito, e um circuito%%  em uma série temporal, o que pode ser util para a realização de%%  diversos problemas complexos que envolvem teoria de circuitos, como%%  analise de dados, analise de dados dinamicos, projetos de filtros etc.%%